name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: prod-large

jobs:
  build-lint-scan-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Lint Dockerfile
      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error

      # Lint Python code
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install flake8
        run: pip install flake8

      - name: Install black
        run: pip install black
        
      - name: Auto format code with Black
        run: black .

      - name: Run flake8 on Python code
        run: flake8 main.py
      

      # Scan Dockerfile with Checkov
      - name: Run Checkov on Dockerfile
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: dockerfile
        continue-on-error: true

      # Install and run Trivy on file system
      - name: Install Trivy (latest)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg lsb-release
          curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/trivy.gpg
          echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Trivy scan of filesystem
        run: trivy fs . --exit-code 0 --severity HIGH,CRITICAL

      # Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:latest .

      # Trivy scan of Docker image
      - name: Trivy scan of Docker image
        run: trivy image ${{ env.IMAGE_NAME }}:latest --exit-code 1 --severity HIGH,CRITICAL

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Tag and push Docker image
      - name: Push Docker image to Docker Hub
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest